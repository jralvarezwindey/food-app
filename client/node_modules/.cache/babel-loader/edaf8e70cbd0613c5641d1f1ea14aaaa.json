{"ast":null,"code":"var _jsxFileName = \"/home/jralvarezwindey/Escritorio/henry-ip-food/client/src/components/RecipeDetail/RecipeDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport Loading from '../Loading/Loading.js';\nimport { setLoading } from '../../redux/actions.js';\nimport * as S from './RecipeDetail.styled.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RecipeDetail() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [details, setDetails] = useState({\n    title: '',\n    image: '',\n    diets: [],\n    summary: '',\n    score: '',\n    healthScore: '',\n    instructions: []\n  });\n  const {\n    loading\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(setLoading(true));\n\n    (async function (id) {\n      try {\n        var _result$data$diets;\n\n        const result = await axios.get(`http://localhost:3001/recipes/${id}`); // Map diets property of db recipes from an array of objects to an array of strings.\n\n        result.data.diets = !id.includes('EXTERNAL_') ? (_result$data$diets = result.data.diets) === null || _result$data$diets === void 0 ? void 0 : _result$data$diets.map(diet => diet.name) : result.data.diets;\n        setDetails({ ...details,\n          ...result.data\n        });\n        dispatch(setLoading(false));\n      } catch (error) {\n        console.log(error);\n      }\n    })(id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(S.RecipeDetail, {\n      children: [/*#__PURE__*/_jsxDEV(S.Image, {\n        src: details.image,\n        alt: \"recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(S.Info, {\n        children: [/*#__PURE__*/_jsxDEV(S.Title, {\n          children: details.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(S.Score, {\n          percentage: details.score,\n          children: \"Spoonacular score: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(S.HealthScore, {\n          children: [\"Health score: \", details.healthScore, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(S.Diets, {\n          children: details.diets.map((diet, index) => {\n            return /*#__PURE__*/_jsxDEV(S.Diet, {\n              children: diet\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(S.SubTitle, {\n          children: \"Summary:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(S.Text, {\n          children: details.summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(S.SubTitle, {\n          children: \"Instructions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(S.Text, {\n          children: details.instructions.map((instruction, index) => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", instruction, \" \"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }, this), \" \"]\n  }, void 0, true);\n}\n\n_s(RecipeDetail, \"FdcDKQcXjei3ZeUfqgo/8uxJ3MY=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = RecipeDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeDetail\");","map":{"version":3,"sources":["/home/jralvarezwindey/Escritorio/henry-ip-food/client/src/components/RecipeDetail/RecipeDetail.js"],"names":["React","useEffect","useState","useParams","useSelector","useDispatch","axios","Loading","setLoading","S","RecipeDetail","id","details","setDetails","title","image","diets","summary","score","healthScore","instructions","loading","state","dispatch","result","get","data","includes","map","diet","name","error","console","log","index","instruction"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport {  useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport Loading from '../Loading/Loading.js';\nimport { setLoading } from '../../redux/actions.js';\nimport * as S from './RecipeDetail.styled.js'\n\nexport default function RecipeDetail() {\n  const { id } = useParams();\n  const [details, setDetails] = useState({\n    title: '',\n    image: '',\n    diets: [],\n    summary: '',\n    score: '',\n    healthScore: '',\n    instructions: [],\n  });\n  const { loading } = useSelector(state => state); \n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setLoading(true));\n    (async function(id) {\n      try {\n        const result = await axios.get(`http://localhost:3001/recipes/${id}`); \n        // Map diets property of db recipes from an array of objects to an array of strings.\n        result.data.diets = !id.includes('EXTERNAL_') ? result.data.diets?.map(diet => diet.name) : result.data.diets;\n        setDetails({\n          ...details,\n          ...result.data, \n        });\n        dispatch(setLoading(false));\n      } catch(error) {\n        console.log(error);\n      }\n    })(id);\n  }, [])\n\n  return (\n    <> { loading ? <Loading/> : <S.RecipeDetail>\n      <S.Image src={ details.image } alt='recipe'/>\n\n      <S.Info > \n        <S.Title>{ details.title }</S.Title>\n\n        <S.Score percentage={ details.score }>Spoonacular score: </S.Score>\n        <S.HealthScore>Health score: { details.healthScore }%</S.HealthScore>\n\n        <S.Diets>\n            { details.diets.map((diet, index) => {\n              return (\n                <S.Diet key={ index }>{ diet }</S.Diet>\n              )\n            }) }\n        </S.Diets>\n        \n        <S.SubTitle>Summary:</S.SubTitle>\n        <S.Text>{ details.summary }</S.Text>\n\n        <S.SubTitle>Instructions:</S.SubTitle>\n        <S.Text> \n          { details.instructions.map((instruction, index) => {\n            return (\n              <p key={ index }> { instruction } </p>\n            )\n          }) }\n        </S.Text>\n      </S.Info>\n    </S.RecipeDetail> } </>\n    \n  )\n}\n"]},"metadata":{},"sourceType":"module"}
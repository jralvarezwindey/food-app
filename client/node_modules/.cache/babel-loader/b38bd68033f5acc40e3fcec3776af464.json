{"ast":null,"code":"var _jsxFileName = \"/home/jralvarezwindey/Escritorio/henry-ip-food/client/src/components/DisplayParameters/DisplayParameters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterRecipes, changeFilters, sortRecipes } from '../../redux/actions.js';\nimport * as S from './DisplayParameters.styled.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DisplayParameters() {\n  _s();\n\n  const [selectedFilters, setSelectedFilters] = useState([]);\n  const {\n    diets\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  function handleClickFilterButton(filter) {\n    const index = selectedFilters.indexOf(filter);\n    index !== -1 ? setSelectedFilters(selectedFilters.filter(selectedFilter => selectedFilter !== filter)) : setSelectedFilters([...selectedFilters, filter]);\n    dispatch(changeFilters(filter));\n    dispatch(filterRecipes());\n  }\n\n  function handleClickOrderButton(sortCriteria) {\n    dispatch(sortRecipes(sortCriteria));\n  }\n\n  return /*#__PURE__*/_jsxDEV(S.ParametersContainer, {\n    children: [/*#__PURE__*/_jsxDEV(S.Dropdown, {\n      children: [/*#__PURE__*/_jsxDEV(S.DropdownButton, {\n        children: \"Order by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.DropdownContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => handleClickOrderButton('az'),\n          children: \"(a-z)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => handleClickOrderButton('za'),\n          children: \"(z-a)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => handleClickOrderButton('score'),\n          children: \"score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Diets, {\n      children: [/*#__PURE__*/_jsxDEV(S.Title, {\n        children: \"Filter by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), diets.map((diet, index) => {\n        const active = selectedFilters.includes(diet);\n        return /*#__PURE__*/_jsxDEV(S.Diet, {\n          active: active,\n          onClick: () => handleClickFilterButton(diet, index),\n          children: diet\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DisplayParameters, \"JvmjT11LRVKgSai8QIuoV1Nrg70=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DisplayParameters;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayParameters\");","map":{"version":3,"sources":["/home/jralvarezwindey/Escritorio/henry-ip-food/client/src/components/DisplayParameters/DisplayParameters.js"],"names":["React","useState","useSelector","useDispatch","filterRecipes","changeFilters","sortRecipes","S","DisplayParameters","selectedFilters","setSelectedFilters","diets","state","dispatch","handleClickFilterButton","filter","index","indexOf","selectedFilter","handleClickOrderButton","sortCriteria","map","diet","active","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,WAAvC,QAA0D,wBAA1D;AACA,OAAO,KAAKC,CAAZ,MAAmB,+BAAnB;;AAGA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAC1C,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAYT,WAAW,CAACU,KAAK,IAAIA,KAAV,CAA7B;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,WAASW,uBAAT,CAAiCC,MAAjC,EAAyC;AACvC,UAAMC,KAAK,GAAGP,eAAe,CAACQ,OAAhB,CAAwBF,MAAxB,CAAd;AACAC,IAAAA,KAAK,KAAK,CAAC,CAAX,GACIN,kBAAkB,CAACD,eAAe,CAACM,MAAhB,CAAuBG,cAAc,IAAIA,cAAc,KAAKH,MAA5D,CAAD,CADtB,GAEIL,kBAAkB,CAAC,CAAC,GAAGD,eAAJ,EAAqBM,MAArB,CAAD,CAFtB;AAIAF,IAAAA,QAAQ,CAACR,aAAa,CAACU,MAAD,CAAd,CAAR;AACAF,IAAAA,QAAQ,CAACT,aAAa,EAAd,CAAR;AACD;;AAED,WAASe,sBAAT,CAAgCC,YAAhC,EAA8C;AAC5CP,IAAAA,QAAQ,CAACP,WAAW,CAACc,YAAD,CAAZ,CAAR;AACD;;AAGD,sBACE,QAAC,CAAD,CAAG,mBAAH;AAAA,4BACE,QAAC,CAAD,CAAG,QAAH;AAAA,8BACE,QAAC,CAAD,CAAG,cAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,CAAD,CAAG,eAAH;AAAA,gCACE;AAAG,UAAA,OAAO,EAAE,MAAMD,sBAAsB,CAAC,IAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,OAAO,EAAE,MAAMA,sBAAsB,CAAC,IAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAG,UAAA,OAAO,EAAE,MAAMA,sBAAsB,CAAC,OAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,CAAD,CAAG,KAAH;AAAA,8BACE,QAAC,CAAD,CAAG,KAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIIR,KAAK,CAACU,GAAN,CAAU,CAACC,IAAD,EAAON,KAAP,KAAiB;AACzB,cAAMO,MAAM,GAAGd,eAAe,CAACe,QAAhB,CAAyBF,IAAzB,CAAf;AACA,4BACE,QAAC,CAAD,CAAG,IAAH;AAEE,UAAA,MAAM,EAAGC,MAFX;AAGE,UAAA,OAAO,EAAG,MAAMT,uBAAuB,CAACQ,IAAD,EAAON,KAAP,CAHzC;AAAA,oBAIIM;AAJJ,WACQN,KADR;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OAVD,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAlDuBR,iB;UAEJN,W,EACDC,W;;;KAHKK,iB;AAkDvB","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterRecipes, changeFilters, sortRecipes } from '../../redux/actions.js';\nimport * as S from './DisplayParameters.styled.js';\n\n\nexport default function DisplayParameters() {\n  const [selectedFilters, setSelectedFilters] = useState([])\n  const { diets } = useSelector(state => state)\n  const dispatch = useDispatch();\n\n  function handleClickFilterButton(filter) {\n    const index = selectedFilters.indexOf(filter);\n    index !== -1\n      ? setSelectedFilters(selectedFilters.filter(selectedFilter => selectedFilter !== filter))\n      : setSelectedFilters([...selectedFilters, filter]);\n\n    dispatch(changeFilters(filter));\n    dispatch(filterRecipes());\n  }\n\n  function handleClickOrderButton(sortCriteria) {\n    dispatch(sortRecipes(sortCriteria));\n  }\n\n \n  return (\n    <S.ParametersContainer>\n      <S.Dropdown>\n        <S.DropdownButton>Order by</S.DropdownButton>\n        <S.DropdownContent>\n          <p onClick={() => handleClickOrderButton('az') }>(a-z)</p>\n          <p onClick={() => handleClickOrderButton('za') }>(z-a)</p>\n          <p onClick={() => handleClickOrderButton('score') }>score</p>\n        </S.DropdownContent>\n      </S.Dropdown>\n\n      <S.Diets > \n        <S.Title> \n          Filter by \n        </S.Title>\n        { diets.map((diet, index) => {\n            const active = selectedFilters.includes(diet)\n            return (\n              <S.Diet \n                key={ index }\n                active={ active }\n                onClick={ () => handleClickFilterButton(diet, index) }>\n                { diet }\n              </S.Diet>\n            )\n          }\n        ) }\n      </S.Diets>\n    </S.ParametersContainer>\n  )\n};\n      \n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nexport const GET_RECIPES = 'GET_RECIPES';\nexport const GET_DIETS = 'GET_DIETS';\nexport const CHANGE_FILTERS = 'CHANGE_FILTERS';\nexport const FILTER_RECIPES = 'FILTER_RECIPES';\nexport const SORT_RECIPES = 'SORT_RECIPES';\nexport const SET_PAGE = 'SET_PAGE';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_NOT_FOUND = 'SET_NOT_FOUND';\nexport function getDiets() {\n  return async function (dispatch) {\n    try {\n      const result = await axios.get(`http://localhost:3001/diets`);\n      const diets = result.data;\n      dispatch({\n        type: GET_DIETS,\n        payload: diets\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\nexport function getRecipes(query) {\n  return async function (dispatch) {\n    try {\n      dispatch(setLoading(true));\n      const result = await axios.get(`http://localhost:3001/recipes?title=${query}`);\n      console.log(result);\n      const recipes = result.data[0].length > 0 || result.data[1].length > 0 ? result.data : 'not found';\n      dispatch({\n        type: GET_RECIPES,\n        payload: recipes\n      });\n      dispatch(setLoading(false));\n    } catch (error) {\n      dispatch(setLoading(false));\n      console.error(error);\n    }\n  };\n}\n;\nexport function changeFilters(filter) {\n  return {\n    type: CHANGE_FILTERS,\n    payload: filter\n  };\n}\nexport function filterRecipes() {\n  return {\n    type: FILTER_RECIPES\n  };\n}\nexport function sortRecipes(sortCriteria) {\n  return {\n    type: SORT_RECIPES,\n    payload: sortCriteria\n  };\n}\n;\nexport function setPage(pageNumber) {\n  return {\n    type: SET_PAGE,\n    payload: pageNumber\n  };\n}\nexport function setLoading(state) {\n  return {\n    type: SET_LOADING,\n    payload: state\n  };\n}\nexport function setNotFound(state) {\n  return {\n    type: SET_NOT_FOUND,\n    payload: state\n  };\n}","map":{"version":3,"sources":["/home/jralvarezwindey/Escritorio/henry-ip-food/client/src/redux/actions.js"],"names":["axios","GET_RECIPES","GET_DIETS","CHANGE_FILTERS","FILTER_RECIPES","SORT_RECIPES","SET_PAGE","SET_LOADING","SET_NOT_FOUND","getDiets","dispatch","result","get","diets","data","type","payload","error","console","getRecipes","query","setLoading","log","recipes","length","changeFilters","filter","filterRecipes","sortRecipes","sortCriteria","setPage","pageNumber","state","setNotFound"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,SAASC,QAAT,GAAoB;AACzB,SAAO,gBAAeC,QAAf,EAAyB;AAC9B,QAAI;AACF,YAAMC,MAAM,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,6BAAX,CAArB;AACA,YAAMC,KAAK,GAAGF,MAAM,CAACG,IAArB;AACAJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEb,SADC;AAEPc,QAAAA,OAAO,EAAEH;AAFF,OAAD,CAAR;AAID,KAPD,CAOE,OAAMI,KAAN,EAAa;AACbC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GAXD;AAYD;AAED,OAAO,SAASE,UAAT,CAAoBC,KAApB,EAA2B;AAChC,SAAO,gBAAeV,QAAf,EAAyB;AAC9B,QAAI;AACFA,MAAAA,QAAQ,CAACW,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMV,MAAM,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,uCAAsCQ,KAAM,EAAvD,CAArB;AACAF,MAAAA,OAAO,CAACI,GAAR,CAAYX,MAAZ;AACA,YAAMY,OAAO,GAAIZ,MAAM,CAACG,IAAP,CAAY,CAAZ,EAAeU,MAAf,GAAwB,CAAxB,IAA6Bb,MAAM,CAACG,IAAP,CAAY,CAAZ,EAAeU,MAAf,GAAwB,CAAtD,GAA2Db,MAAM,CAACG,IAAlE,GAAyE,WAAzF;AACAJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEd,WADC;AAEPe,QAAAA,OAAO,EAAEO;AAFF,OAAD,CAAR;AAIAb,MAAAA,QAAQ,CAACW,UAAU,CAAC,KAAD,CAAX,CAAR;AACD,KAVD,CAUE,OAAMJ,KAAN,EAAa;AACbP,MAAAA,QAAQ,CAACW,UAAU,CAAC,KAAD,CAAX,CAAR;AACAH,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GAfD;AAgBD;AAAA;AAED,OAAO,SAASQ,aAAT,CAAuBC,MAAvB,EAA+B;AACpC,SAAO;AACLX,IAAAA,IAAI,EAAEZ,cADD;AAELa,IAAAA,OAAO,EAAEU;AAFJ,GAAP;AAID;AAED,OAAO,SAASC,aAAT,GAAyB;AAC9B,SAAO;AACLZ,IAAAA,IAAI,EAAEX;AADD,GAAP;AAGD;AAED,OAAO,SAASwB,WAAT,CAAqBC,YAArB,EAAmC;AACxC,SAAO;AACLd,IAAAA,IAAI,EAAEV,YADD;AAELW,IAAAA,OAAO,EAAEa;AAFJ,GAAP;AAID;AAAA;AAED,OAAO,SAASC,OAAT,CAAiBC,UAAjB,EAA6B;AAClC,SAAO;AACLhB,IAAAA,IAAI,EAAET,QADD;AAELU,IAAAA,OAAO,EAAEe;AAFJ,GAAP;AAID;AAED,OAAO,SAASV,UAAT,CAAoBW,KAApB,EAA2B;AAChC,SAAO;AACLjB,IAAAA,IAAI,EAAER,WADD;AAELS,IAAAA,OAAO,EAAEgB;AAFJ,GAAP;AAID;AAED,OAAO,SAASC,WAAT,CAAqBD,KAArB,EAA4B;AACjC,SAAO;AACLjB,IAAAA,IAAI,EAAEP,aADD;AAELQ,IAAAA,OAAO,EAAEgB;AAFJ,GAAP;AAID","sourcesContent":["import axios from 'axios';\n \nexport const GET_RECIPES = 'GET_RECIPES';\nexport const GET_DIETS = 'GET_DIETS';\nexport const CHANGE_FILTERS = 'CHANGE_FILTERS';\nexport const FILTER_RECIPES = 'FILTER_RECIPES';\nexport const SORT_RECIPES = 'SORT_RECIPES';\nexport const SET_PAGE = 'SET_PAGE';\nexport const SET_LOADING = 'SET_LOADING'\nexport const SET_NOT_FOUND = 'SET_NOT_FOUND'\n\nexport function getDiets() {\n  return async function(dispatch) {\n    try {\n      const result = await axios.get(`http://localhost:3001/diets`);\n      const diets = result.data;\n      dispatch({\n        type: GET_DIETS,\n        payload: diets,\n      });\n    } catch(error) {\n      console.error(error);\n    }\n  }\n}\n\nexport function getRecipes(query) {\n  return async function(dispatch) {\n    try {\n      dispatch(setLoading(true));\n      const result = await axios.get(`http://localhost:3001/recipes?title=${query}`);\n      console.log(result)\n      const recipes = (result.data[0].length > 0 || result.data[1].length > 0) ? result.data : 'not found';\n      dispatch({\n        type: GET_RECIPES,\n        payload: recipes \n      });\n      dispatch(setLoading(false))\n    } catch(error) {\n      dispatch(setLoading(false))\n      console.error(error);\n    }\n  }\n};\n\nexport function changeFilters(filter) {\n  return {\n    type: CHANGE_FILTERS,\n    payload: filter\n  }\n}\n\nexport function filterRecipes() {\n  return {\n    type: FILTER_RECIPES,\n  }\n}\n\nexport function sortRecipes(sortCriteria) {\n  return {\n    type: SORT_RECIPES,\n    payload: sortCriteria,\n  }\n};\n\nexport function setPage(pageNumber) {\n  return {\n    type: SET_PAGE,\n    payload: pageNumber,\n  }\n}\n\nexport function setLoading(state) {\n  return {\n    type: SET_LOADING,\n    payload: state\n  }\n}\n\nexport function setNotFound(state) {\n  return {\n    type: SET_NOT_FOUND,\n    payload: state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
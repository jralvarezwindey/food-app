{"ast":null,"code":"import axios from 'axios';\nexport const GET_RECIPES = 'GET_RECIPES';\nexport const GET_RECIPE_DETAIL = 'GET_RECIPE_DETAIL';\nexport const POST_RECIPE = 'POST_RECIPE';\nexport function getRecipes(query) {\n  return async dispatch => {\n    try {\n      const result = await axios.get(`http://localhost:3001/recipes?name=${query}`);\n      const recipes = result.data;\n      dispatch({\n        type: GET_RECIPES,\n        payload: recipes\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n;\nexport function getRecipeDetail(id) {\n  return async function (dispatch) {\n    try {\n      const result = await axios.get(`http://localhost:3001/recipes/${id}`);\n      const recipeDetail = result.data;\n      dispatch({\n        type: GET_RECIPE_DETAIL,\n        payload: recipeDetail\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n;\nexport function postRecipe(details) {\n  return async function (dispatch) {\n    try {\n      const result = await axios.post('http://localhost:3001/recipes');\n      const recipeDetail = result.data;\n      dispatch({\n        type: POST_RECIPE,\n        payload: recipeDetail\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n;","map":{"version":3,"sources":["/home/jralvarezwindey/Escritorio/henry-ip-food/client/src/actions/index.js"],"names":["axios","GET_RECIPES","GET_RECIPE_DETAIL","POST_RECIPE","getRecipes","query","dispatch","result","get","recipes","data","type","payload","error","console","log","getRecipeDetail","id","recipeDetail","postRecipe","details","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAChC,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMC,MAAM,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,sCAAqCH,KAAM,EAAtD,CAArB;AACA,YAAMI,OAAO,GAAGF,MAAM,CAACG,IAAvB;AACAJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEV,WADC;AAEPW,QAAAA,OAAO,EAAEH;AAFF,OAAD,CAAR;AAID,KAPD,CASA,OAAMI,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAbD;AAcD;AAAA;AAED,OAAO,SAASG,eAAT,CAAyBC,EAAzB,EAA6B;AAClC,SAAO,gBAAeX,QAAf,EAAyB;AAC9B,QAAI;AACF,YAAMC,MAAM,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,iCAAgCS,EAAG,EAA9C,CAArB;AACA,YAAMC,YAAY,GAAGX,MAAM,CAACG,IAA5B;AACAJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAET,iBADC;AAEPU,QAAAA,OAAO,EAAEM;AAFF,OAAD,CAAR;AAID,KAPD,CASA,OAAML,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAbD;AAcD;AAAA;AAED,OAAO,SAASM,UAAT,CAAoBC,OAApB,EAA6B;AAClC,SAAO,gBAAed,QAAf,EAAyB;AAC9B,QAAI;AACF,YAAMC,MAAM,GAAG,MAAMP,KAAK,CAACqB,IAAN,CAAW,+BAAX,CAArB;AACA,YAAMH,YAAY,GAAGX,MAAM,CAACG,IAA5B;AACAJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAER,WADC;AAEPS,QAAAA,OAAO,EAAEM;AAFF,OAAD,CAAR;AAID,KAPD,CASA,OAAML,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAbD;AAcD;AAAA","sourcesContent":["import axios from 'axios';\n \nexport const GET_RECIPES = 'GET_RECIPES';\nexport const GET_RECIPE_DETAIL = 'GET_RECIPE_DETAIL';\nexport const POST_RECIPE = 'POST_RECIPE';\n\nexport function getRecipes(query) {\n  return async (dispatch) => {\n    try {\n      const result = await axios.get(`http://localhost:3001/recipes?name=${query}`);\n      const recipes = result.data;\n      dispatch({\n        type: GET_RECIPES,\n        payload: recipes\n      });\n    } \n\n    catch(error) {\n      console.log(error);\n    }\n  }\n};\n\nexport function getRecipeDetail(id) {\n  return async function(dispatch) {\n    try {\n      const result = await axios.get(`http://localhost:3001/recipes/${id}`); \n      const recipeDetail = result.data;\n      dispatch({\n        type: GET_RECIPE_DETAIL,\n        payload: recipeDetail,\n      });\n    }\n\n    catch(error) {\n      console.log(error);\n    }\n  }\n};\n\nexport function postRecipe(details) {\n  return async function(dispatch) {\n    try {\n      const result = await axios.post('http://localhost:3001/recipes'); \n      const recipeDetail = result.data;\n      dispatch({\n        type: POST_RECIPE,\n        payload: recipeDetail,\n      });\n    }\n\n    catch(error) {\n      console.log(error);\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
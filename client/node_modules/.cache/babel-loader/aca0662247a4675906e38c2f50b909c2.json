{"ast":null,"code":"var _jsxFileName = \"/home/jralvarezwindey/Escritorio/henry-ip-food/client/src/components/CreateRecipes/CreateRecipeDumb.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as S from './CreateRecipe.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateRecipeDumb(_ref) {\n  _s();\n\n  let {\n    details,\n    errors,\n    handleFormSubmit,\n    handleInputChange,\n    handleAddInstruction,\n    handleRemoveInstruction,\n    handleAddDiet,\n    handleRemoveDiet\n  } = _ref;\n  const [selectedFilters, setSelectedFilters] = useState([]);\n  const {\n    diets\n  } = useSelector(state => state);\n\n  function handleClickDiet(filter) {\n    const index = selectedFilters.indexOf(filter);\n    index !== -1 ? setSelectedFilters(selectedFilters.filter(selectedFilter => selectedFilter !== filter)) : setSelectedFilters([...selectedFilters, filter]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(S.Form, {\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(S.Diets, {\n      children: [/*#__PURE__*/_jsxDEV(S.DietsTitle, {\n        children: \"Add diets:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), diets.map((diet, index) => {\n        const active = selectedFilters.includes(diet);\n        return /*#__PURE__*/_jsxDEV(S.Diet, {\n          active: active,\n          onClick: () => handleClickDiet(diet, index),\n          children: diet\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Inputs, {\n      children: [/*#__PURE__*/_jsxDEV(S.Label, {\n        htmlFor: \"title\",\n        children: \"TITLE: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Input, {\n        maxLength: \"100\",\n        name: \"title\",\n        value: details.title,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Span, {\n        active: errors.title,\n        children: \"Title for the recipe is required.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(S.Label, {\n        htmlFor: \"score\",\n        children: \"SCORE: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Input, {\n        name: \"score\",\n        value: details.score,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Span, {\n        active: errors.score,\n        children: \"Score must be a non-negative number lower than 100.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(S.Label, {\n        htmlFor: \"healthScore\",\n        children: \"HEALTH SCORE: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Input, {\n        name: \"healthScore\",\n        value: details.healthScore,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Span, {\n        active: errors.healthScore,\n        children: \"Health score must be a non-negative number lower than 100.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(S.Label, {\n        htmlFor: \"summary\",\n        children: \"SUMMARY: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.TextArea, {\n        name: \"summary\",\n        value: details.summary,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Span, {\n        active: errors.summary,\n        children: \"Summary for the recipe is required.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(S.Label, {\n        htmlFor: \"instruction\",\n        children: \"ADD INSTRUCTION: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.TextArea, {\n        name: \"instruction\",\n        value: details.instruction,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Button, {\n        type: \"button\",\n        onClick: handleAddInstruction,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), details.instructions.map((instruction, index) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [instruction, \" \", /*#__PURE__*/_jsxDEV(S.Button, {\n            type: \"button\",\n            onClick: () => handleRemoveInstruction(index),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 31\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Button, {\n      disabled: errors.disableSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateRecipeDumb, \"TctLG6396Lrd6StIMSLLG5Npffs=\", false, function () {\n  return [useSelector];\n});\n\n_c = CreateRecipeDumb;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRecipeDumb\");","map":{"version":3,"sources":["/home/jralvarezwindey/Escritorio/henry-ip-food/client/src/components/CreateRecipes/CreateRecipeDumb.js"],"names":["React","useState","useSelector","S","CreateRecipeDumb","details","errors","handleFormSubmit","handleInputChange","handleAddInstruction","handleRemoveInstruction","handleAddDiet","handleRemoveDiet","selectedFilters","setSelectedFilters","diets","state","handleClickDiet","filter","index","indexOf","selectedFilter","map","diet","active","includes","title","score","healthScore","summary","instruction","instructions","disableSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as S from './CreateRecipe.styled'\n\nexport default function CreateRecipeDumb({ \n  details, errors, handleFormSubmit, handleInputChange,\n  handleAddInstruction, handleRemoveInstruction, handleAddDiet, handleRemoveDiet\n}) {\n  const [selectedFilters, setSelectedFilters] = useState([])\n  const { diets } = useSelector(state => state)\n\n  function handleClickDiet(filter) {\n    const index = selectedFilters.indexOf(filter);\n    index !== -1\n      ? setSelectedFilters(selectedFilters.filter(selectedFilter => selectedFilter !== filter))\n      : setSelectedFilters([...selectedFilters, filter]);\n  }\n\n  return (\n    <S.Form onSubmit={ handleFormSubmit }> \n      <S.Diets > \n        <S.DietsTitle> \n          Add diets: \n        </S.DietsTitle>\n        { diets.map((diet, index) => {\n            const active = selectedFilters.includes(diet)\n            return (\n              <S.Diet \n                key={ index }\n                active={ active }\n                onClick={ () => handleClickDiet(diet, index) }>\n                { diet }\n              </S.Diet>\n            )\n          }\n        ) }\n      </S.Diets>\n\n      <S.Inputs > \n        <S.Label htmlFor='title'>TITLE: </S.Label>\n        <S.Input maxLength='100' name='title' value={ details.title } onChange={ handleInputChange }/> \n        { <S.Span active={ errors.title }>Title for the recipe is required.</S.Span> }\n\n        <S.Label htmlFor='score'>SCORE: </S.Label>\n        <S.Input name='score' value={ details.score } onChange={ handleInputChange }/> \n        { <S.Span active={ errors.score }>Score must be a non-negative number lower than 100.</S.Span> }\n\n        <S.Label htmlFor='healthScore'>HEALTH SCORE: </S.Label>\n        <S.Input name='healthScore' value={ details.healthScore } onChange={ handleInputChange }/> \n        { <S.Span active={ errors.healthScore }>Health score must be a non-negative number lower than 100.</S.Span> }\n\n        <S.Label htmlFor='summary'>SUMMARY: </S.Label>\n        <S.TextArea name='summary' value={ details.summary } onChange={ handleInputChange }></S.TextArea> \n        { <S.Span active={ errors.summary }>Summary for the recipe is required.</S.Span> }\n\n        <S.Label htmlFor='instruction'>ADD INSTRUCTION: </S.Label>\n        <S.TextArea name=\"instruction\" value={ details.instruction } onChange={ handleInputChange }></S.TextArea>\n        <S.Button type='button' onClick={ handleAddInstruction }>+</S.Button>\n      { \n        details.instructions.map((instruction, index) => {\n          return (\n            <p key={ index }> \n              { instruction } <S.Button type='button' onClick={ () => handleRemoveInstruction(index) }>-</S.Button>\n            </p>\n          )\n        }) \n      }\n\n      </S.Inputs>\n\n      <S.Button disabled={ errors.disableSubmit }>\n        Submit\n      </S.Button>\n    </S.Form>\n  )\n};\n\n"]},"metadata":{},"sourceType":"module"}
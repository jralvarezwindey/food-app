{"ast":null,"code":"var _jsxFileName = \"/home/jralvarezwindey/Escritorio/food/client/src/components/CreateRecipe/CreateRecipeDumb.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as S from './CreateRecipe.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateRecipeDumb(_ref) {\n  _s();\n\n  let {\n    details,\n    errors,\n    handleSubmit,\n    handleChange,\n    handleAddInstruction,\n    handleRemoveInstruction,\n    handleSelectedDiets\n  } = _ref;\n  const {\n    diets\n  } = useSelector(state => state);\n  return /*#__PURE__*/_jsxDEV(S.CreateRecipe, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(S.SetDiets, {\n      children: [/*#__PURE__*/_jsxDEV(S.Dropdown, {\n        children: [/*#__PURE__*/_jsxDEV(S.DropdownButton, {\n          children: \"Add diets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.DropdownContent, {\n          children: diets.map((diet, index) => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => handleSelectedDiets(diet, index),\n              children: diet\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.SelectedDiets, {\n        children: details.diets.map((diet, index) => {\n          return /*#__PURE__*/_jsxDEV(S.SelectedDiet, {\n            onClick: () => handleSelectedDiets(diet, index),\n            children: diet\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Inputs, {\n      children: [/*#__PURE__*/_jsxDEV(S.Label, {\n        htmlFor: \"title\",\n        children: \"TITLE: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Input, {\n        width: \"800px\",\n        maxLength: \"100\",\n        autoComplete: \"off\",\n        name: \"title\",\n        value: details.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.ErrorContainer, {\n        children: [/*#__PURE__*/_jsxDEV(S.ErrorSymbol, {\n          children: \"!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(S.ErrorMessage, {\n          children: \"Summary for the recipe is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Error, {\n        active: errors.title,\n        children: \"Title for the recipe is required.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(S.Label, {\n        htmlFor: \"score\",\n        children: \"SCORE: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Input, {\n        width: \"120px\",\n        name: \"score\",\n        autoComplete: \"off\",\n        value: details.score,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.ErrorContainer, {\n        children: [/*#__PURE__*/_jsxDEV(S.ErrorSymbol, {\n          children: \"!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(S.ErrorMessage, {\n          children: \"Summary for the recipe is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Error, {\n        active: errors.score,\n        children: \"Score must be a number between 0 and 5.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(S.Label, {\n        htmlFor: \"healthScore\",\n        children: \"HEALTH SCORE: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Input, {\n        width: \"120px\",\n        name: \"healthScore\",\n        autoComplete: \"off\",\n        value: details.healthScore,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.ErrorContainer, {\n        children: [/*#__PURE__*/_jsxDEV(S.ErrorSymbol, {\n          children: \"!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(S.ErrorMessage, {\n          children: \"Summary for the recipe is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Error, {\n        active: errors.healthScore,\n        children: \"Health score must be an integer between 0 and 100.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(S.Label, {\n        htmlFor: \"summary\",\n        children: \"SUMMARY: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.TextArea, {\n        height: \"205px\",\n        name: \"summary\",\n        autoComplete: \"off\",\n        value: details.summary,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.ErrorContainer, {\n        children: [/*#__PURE__*/_jsxDEV(S.ErrorSymbol, {\n          children: \"!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(S.ErrorMessage, {\n          children: \"Summary for the recipe is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Error, {\n        active: errors.summary,\n        children: \"Summary for the recipe is required.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(S.Label, {\n        htmlFor: \"instruction\",\n        children: \"ADD INSTRUCTION: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.AddInstructionContainer, {\n        children: [/*#__PURE__*/_jsxDEV(S.TextArea, {\n          height: \"120px\",\n          name: \"instruction\",\n          autoComplete: \"off\",\n          value: details.instruction,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.AddInstructionButton, {\n          inactive: details.instruction.length > 0 ? false : true,\n          type: \"button\",\n          onClick: handleAddInstruction,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Instructions, {\n        inactive: details.instructions.length > 0 ? false : true,\n        children: details.instructions.map((instruction, index) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [instruction, \" \", /*#__PURE__*/_jsxDEV(S.RemoveInstructionButton, {\n              type: \"button\",\n              onClick: () => handleRemoveInstruction(index),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 35\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.SubmitButton, {\n      disabled: errors.disableSubmit,\n      inactive: errors.disableSubmit,\n      children: /*#__PURE__*/_jsxDEV(S.P, {\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateRecipeDumb, \"7LsZHFxWYBMwvFUQmsF0m7efG74=\", false, function () {\n  return [useSelector];\n});\n\n_c = CreateRecipeDumb;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRecipeDumb\");","map":{"version":3,"sources":["/home/jralvarezwindey/Escritorio/food/client/src/components/CreateRecipe/CreateRecipeDumb.js"],"names":["React","useSelector","S","CreateRecipeDumb","details","errors","handleSubmit","handleChange","handleAddInstruction","handleRemoveInstruction","handleSelectedDiets","diets","state","map","diet","index","title","score","healthScore","summary","instruction","length","instructions","disableSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as S from './CreateRecipe.styled'\n\nexport default function CreateRecipeDumb({ details, errors, handleSubmit, handleChange, handleAddInstruction, handleRemoveInstruction, handleSelectedDiets }) {\n  const { diets } = useSelector(state => state)\n\n  return (\n    <S.CreateRecipe onSubmit={ handleSubmit }> \n      <S.SetDiets > \n        <S.Dropdown>\n          <S.DropdownButton>Add diets</S.DropdownButton>\n          <S.DropdownContent>\n            { diets.map((diet, index) => {\n              return <p key={ index }onClick={() => handleSelectedDiets(diet, index) }>{ diet }</p>\n            }) }\n          </S.DropdownContent>\n        </S.Dropdown>\n\n        <S.SelectedDiets> \n          { details.diets.map((diet, index) => {\n            return <S.SelectedDiet key={ index } onClick={ () => handleSelectedDiets(diet, index)}>{ diet }</S.SelectedDiet>\n          }) }\n        </S.SelectedDiets>\n      </S.SetDiets>\n\n      <S.Inputs > \n        <S.Label htmlFor='title'>TITLE: </S.Label>\n        <S.Input width='800px' maxLength='100' autoComplete='off' name='title' value={ details.title } onChange={ handleChange }/> \n        <S.ErrorContainer ><S.ErrorSymbol>!</S.ErrorSymbol><S.ErrorMessage>Summary for the recipe is required.</S.ErrorMessage></S.ErrorContainer>\n        { <S.Error active={ errors.title }>Title for the recipe is required.</S.Error> }\n\n        <S.Label htmlFor='score'>SCORE: </S.Label>\n        <S.Input width ='120px' name='score' autoComplete='off' value={ details.score } onChange={ handleChange }/> \n        <S.ErrorContainer ><S.ErrorSymbol>!</S.ErrorSymbol><S.ErrorMessage>Summary for the recipe is required.</S.ErrorMessage></S.ErrorContainer>\n        { <S.Error active={ errors.score }>Score must be a number between 0 and 5.</S.Error> }\n\n        <S.Label htmlFor='healthScore'>HEALTH SCORE: </S.Label>\n        <S.Input width ='120px' name='healthScore' autoComplete='off' value={ details.healthScore } onChange={ handleChange }/> \n        <S.ErrorContainer ><S.ErrorSymbol>!</S.ErrorSymbol><S.ErrorMessage>Summary for the recipe is required.</S.ErrorMessage></S.ErrorContainer>\n        { <S.Error active={ errors.healthScore }>Health score must be an integer between 0 and 100.</S.Error> }\n\n        <S.Label htmlFor='summary'>SUMMARY: </S.Label>\n        <S.TextArea height='205px' name='summary' autoComplete='off' value={ details.summary } onChange={ handleChange }></S.TextArea> \n        <S.ErrorContainer ><S.ErrorSymbol>!</S.ErrorSymbol><S.ErrorMessage>Summary for the recipe is required.</S.ErrorMessage></S.ErrorContainer>\n        { <S.Error active={ errors.summary }>Summary for the recipe is required.</S.Error> }\n\n        <S.Label htmlFor='instruction'>ADD INSTRUCTION: </S.Label>\n        <S.AddInstructionContainer>\n          <S.TextArea height='120px' name=\"instruction\" autoComplete='off' value={ details.instruction } onChange={ handleChange }></S.TextArea>\n          <S.AddInstructionButton inactive={ details.instruction.length > 0 ? false : true } type='button' onClick={ handleAddInstruction }>+</S.AddInstructionButton>\n        </S.AddInstructionContainer>\n        \n        <S.Instructions inactive={ details.instructions.length > 0 ? false : true }> \n          { details.instructions.map((instruction, index) => {\n              return (\n                <p key={ index }> \n                  { instruction } <S.RemoveInstructionButton type='button' onClick={ () => handleRemoveInstruction(index) }>-</S.RemoveInstructionButton>\n                </p>\n              )\n            }) }\n        </S.Instructions>\n\n      </S.Inputs>\n\n      <S.SubmitButton disabled={ errors.disableSubmit } inactive={errors.disableSubmit }>\n        <S.P>SUBMIT</S.P>\n      </S.SubmitButton>\n    </S.CreateRecipe>\n  )\n};\n\n"]},"metadata":{},"sourceType":"module"}
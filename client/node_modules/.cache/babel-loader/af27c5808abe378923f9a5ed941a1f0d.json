{"ast":null,"code":"import { GET_RECIPES, SORT_RECIPES } from '../actions';\nconst initialState = {\n  recipes: [],\n  sortCriteria: 'none'\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_RECIPES:\n      return { ...state,\n        recipes: action.payload\n      };\n\n    case SORT_RECIPES:\n      return { ...state,\n        recipes: sortFunction([...state.recipes], action.payload),\n        sortCriteria: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}\n;\n\nfunction sortFunction(array, sortCriteria) {\n  switch (sortCriteria) {\n    case 'az':\n      return array.sort((x, y) => x.title.localeCompare(y.title));\n\n    case 'za':\n      return array.sort((x, y) => y.title.localeCompare(x.title));\n\n    case 'score':\n      return array.sort((x, y) => x.title - y.title);\n\n    default:\n      return array;\n  }\n}","map":{"version":3,"sources":["/home/jralvarezwindey/Escritorio/henry-ip-food/client/src/reducer/index.js"],"names":["GET_RECIPES","SORT_RECIPES","initialState","recipes","sortCriteria","reducer","state","action","type","payload","sortFunction","array","sort","x","y","title","localeCompare"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,QAA0C,YAA1C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,YAAY,EAAE;AAFK,CAArB;AAKA,eAAe,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAC5D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKR,WAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAFX,OAAP;;AAIF,SAAKR,YAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELH,QAAAA,OAAO,EAAEO,YAAY,CAAC,CAAC,GAAGJ,KAAK,CAACH,OAAV,CAAD,EAAqBI,MAAM,CAACE,OAA5B,CAFhB;AAGLL,QAAAA,YAAY,EAAEG,MAAM,CAACE;AAHhB,OAAP;;AAKF;AACE,aAAO,EACL,GAAGH;AADE,OAAP;AAbJ;AAiBD;AAAA;;AAED,SAASI,YAAT,CAAsBC,KAAtB,EAA6BP,YAA7B,EAA2C;AACzC,UAAOA,YAAP;AACE,SAAK,IAAL;AAAW,aAAOO,KAAK,CAACC,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,CAAQC,aAAR,CAAsBF,CAAC,CAACC,KAAxB,CAArB,CAAP;;AACX,SAAK,IAAL;AAAW,aAAOJ,KAAK,CAACC,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,KAAF,CAAQC,aAAR,CAAsBH,CAAC,CAACE,KAAxB,CAArB,CAAP;;AACX,SAAK,OAAL;AAAc,aAAOJ,KAAK,CAACC,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAjC,CAAP;;AACd;AAAS,aAAOJ,KAAP;AAJX;AAMD","sourcesContent":["import { GET_RECIPES, SORT_RECIPES } from '../actions';\n\nconst initialState = {\n  recipes: [],\n  sortCriteria: 'none',\n};\n\nexport default function reducer(state = initialState, action) {\n  switch(action.type) {\n    case GET_RECIPES: \n      return {\n        ...state,\n        recipes: action.payload,\n      };\n    case SORT_RECIPES:\n      return {\n        ...state,\n        recipes: sortFunction([...state.recipes], action.payload),\n        sortCriteria: action.payload,\n      }\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nfunction sortFunction(array, sortCriteria) {\n  switch(sortCriteria) {\n    case 'az': return array.sort((x, y) => x.title.localeCompare(y.title));\n    case 'za': return array.sort((x, y) => y.title.localeCompare(x.title));\n    case 'score': return array.sort((x, y) => x.title - y.title);\n    default: return array;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
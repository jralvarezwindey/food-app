{"ast":null,"code":"import { GET_CARDS, GET_ALL_FILTERS, SET_APPLIED_FILTERS, SET_CURRENT_PAGE, FILTER_CARDS, SORT_CARDS } from '../actions';\nconst initialState = {\n  cards: [],\n  allFilters: [],\n  appliedFilters: [],\n  currentPage: 0,\n  filteredCards: [],\n  sortCriteria: 'none'\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case GET_CARDS:\n      return { ...state,\n        cards: payload,\n        currentPage: 0,\n        filteredCards: payload\n      };\n\n    case GET_ALL_FILTERS:\n      return { ...state,\n        allFilters: payload\n      };\n\n    case SET_APPLIED_FILTERS:\n      return { ...state,\n        appliedFilters: setAppliedFiltersManager([...state.appliedFilters], payload)\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: payload\n      };\n\n    case FILTER_CARDS:\n      console.log(state.filteredCards);\n      return { ...state,\n        filteredCards: filterCardsManager([...state.cards], [...state.appliedFilters])\n      };\n\n    case SORT_CARDS:\n      return { ...state,\n        cards: sortCardsManager([...state.cards], payload),\n        currentPage: 0,\n        sortCriteria: payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}\n;\n\nfunction setAppliedFiltersManager(appliedFilters, filter) {\n  appliedFilters.includes(filter) ? appliedFilters.splice(appliedFilters.indexOf(filter), 1) : appliedFilters.push(filter);\n  return appliedFilters;\n}\n\nfunction filterCardsManager(cards, appliedFilters) {\n  return cards.filter(card => {\n    return appliedFilters.every(filter => card.diets.includes(filter));\n  });\n}\n\n;\n\nfunction sortCardsManager(array, sortCriteria) {\n  switch (sortCriteria) {\n    case 'az':\n      return array.sort((x, y) => x.title.localeCompare(y.title));\n\n    case 'za':\n      return array.sort((x, y) => y.title.localeCompare(x.title));\n\n    case 'score':\n      return array.sort((x, y) => y.score - x.score);\n\n    default:\n      return array;\n  }\n}\n\n;","map":{"version":3,"sources":["/home/jralvarezwindey/Escritorio/henry-ip-food/client/src/reducer/index.js"],"names":["GET_CARDS","GET_ALL_FILTERS","SET_APPLIED_FILTERS","SET_CURRENT_PAGE","FILTER_CARDS","SORT_CARDS","initialState","cards","allFilters","appliedFilters","currentPage","filteredCards","sortCriteria","reducer","state","type","payload","setAppliedFiltersManager","console","log","filterCardsManager","sortCardsManager","filter","includes","splice","indexOf","push","card","every","diets","array","sort","x","y","title","localeCompare","score"],"mappings":"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","sourcesContent":["import { GET_CARDS, GET_ALL_FILTERS, SET_APPLIED_FILTERS, SET_CURRENT_PAGE, FILTER_CARDS, SORT_CARDS } from '../actions';\n\nconst initialState = {\n  cards: [],\n  allFilters: [],\n  appliedFilters: [],\n  currentPage: 0,\n  filteredCards: [],\n  sortCriteria: 'none',\n};\n\nexport default function reducer(state = initialState, { type, payload}) {\n  switch(type) {\n    case GET_CARDS: \n      return {\n        ...state,\n        cards: payload,\n        currentPage: 0,\n        filteredCards: payload,\n      };\n\n    case GET_ALL_FILTERS:\n      return {\n        ...state,\n        allFilters: payload,\n      }\n\n    case SET_APPLIED_FILTERS: \n      return {\n        ...state,\n        appliedFilters: setAppliedFiltersManager([...state.appliedFilters], payload)\n      }\n\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n       currentPage: payload,\n      }\n\n    case FILTER_CARDS:\n      console.log(state.filteredCards)\n      return {\n        ...state,\n        filteredCards: filterCardsManager([...state.cards], [...state.appliedFilters])\n      }\n\n    case SORT_CARDS:\n      return {\n        ...state,\n        cards: sortCardsManager([...state.cards], payload),\n        currentPage: 0,\n        sortCriteria: payload,\n      }\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nfunction setAppliedFiltersManager(appliedFilters, filter) {\n  appliedFilters.includes(filter) \n    ? appliedFilters.splice(appliedFilters.indexOf(filter), 1) \n    : appliedFilters.push(filter)\n  return appliedFilters;\n}\n\nfunction filterCardsManager(cards, appliedFilters) {\n  return cards.filter(card => {\n    return appliedFilters.every(filter => card.diets.includes(filter))\n  })\n};\n\nfunction sortCardsManager(array, sortCriteria) {\n  switch(sortCriteria) {\n    case 'az': return array.sort((x, y) => x.title.localeCompare(y.title));\n    case 'za': return array.sort((x, y) => y.title.localeCompare(x.title));\n    case 'score': return array.sort((x, y) => y.score - x.score);\n    default: return array;\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}
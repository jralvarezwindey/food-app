{"ast":null,"code":"import { GET_CARDS, GET_ALL_FILTERS, CHANGE_APPLIED_FILTERS, CHANGE_CURRENT_PAGE, FILTER_CARDS, SORT_CARDS } from '../actions';\nconst initialState = {\n  query: '',\n  cards: [],\n  allFilters: [],\n  appliedFilters: [],\n  currentPage: 0,\n  filteredCards: [],\n  sortCriteria: 'none'\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case GET_CARDS:\n      return { ...state,\n        query: payload.query,\n        cards: payload.cards,\n        currentPage: 0\n      };\n\n    case GET_ALL_FILTERS:\n      return { ...state,\n        allFilters: payload\n      };\n\n    case CHANGE_APPLIED_FILTERS:\n      return { ...state,\n        appliedFilters: changeAppliedFiltersManager([...state.appliedFilters], payload)\n      };\n\n    case CHANGE_CURRENT_PAGE:\n      return { ...state,\n        currentPage: payload\n      };\n\n    case FILTER_CARDS:\n      return { ...state,\n        filteredCards: filterCardsManager([...state.cards], [...state.appliedFilters])\n      };\n\n    case SORT_CARDS:\n      return { ...state,\n        currentPage: 0,\n        filteredCards: sortCardsManager([...state.filteredCards], payload),\n        sortCriteria: payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}\n;\n\nfunction changeAppliedFiltersManager(appliedFilters, filter) {\n  appliedFilters.includes(filter) ? appliedFilters.splice(appliedFilters.indexOf(filter), 1) : appliedFilters.push(filter);\n  return appliedFilters;\n}\n\nfunction filterCardsManager(cards, appliedFilters) {\n  return cards.filter(card => {\n    return appliedFilters.every(filter => card.diets.includes(filter));\n  });\n}\n\n;\n\nfunction sortCardsManager(array, sortCriteria) {\n  switch (sortCriteria) {\n    case 'az':\n      return array.sort((x, y) => x.title.localeCompare(y.title));\n\n    case 'za':\n      return array.sort((x, y) => y.title.localeCompare(x.title));\n\n    case 'score':\n      return array.sort((x, y) => y.score - x.score);\n\n    default:\n      return array;\n  }\n}\n\n;","map":{"version":3,"sources":["/home/jralvarezwindey/Escritorio/henry-ip-food/client/src/reducer/index.js"],"names":["GET_CARDS","GET_ALL_FILTERS","CHANGE_APPLIED_FILTERS","CHANGE_CURRENT_PAGE","FILTER_CARDS","SORT_CARDS","initialState","query","cards","allFilters","appliedFilters","currentPage","filteredCards","sortCriteria","reducer","state","type","payload","changeAppliedFiltersManager","filterCardsManager","sortCardsManager","filter","includes","splice","indexOf","push","card","every","diets","array","sort","x","y","title","localeCompare","score"],"mappings":"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","sourcesContent":["import { GET_CARDS, GET_ALL_FILTERS, CHANGE_APPLIED_FILTERS, CHANGE_CURRENT_PAGE, FILTER_CARDS, SORT_CARDS } from '../actions';\n\nconst initialState = {\n  query: '',\n  cards: [],\n  allFilters: [],\n  appliedFilters: [],\n  currentPage: 0,\n  filteredCards: [],\n  sortCriteria: 'none',\n};\n\nexport default function reducer(state = initialState, { type, payload}) {\n  switch(type) {\n    case GET_CARDS: \n      return {\n        ...state,\n        query: payload.query,\n        cards: payload.cards,\n        currentPage: 0,\n      };\n\n    case GET_ALL_FILTERS:\n      return {\n        ...state,\n        allFilters: payload,\n      }\n\n    case CHANGE_APPLIED_FILTERS: \n      return {\n        ...state,\n        appliedFilters: changeAppliedFiltersManager([...state.appliedFilters], payload)\n      }\n\n    case CHANGE_CURRENT_PAGE:\n      return {\n        ...state,\n       currentPage: payload,\n      }\n\n    case FILTER_CARDS:\n      return {\n        ...state,\n        filteredCards: filterCardsManager([...state.cards], [...state.appliedFilters])\n      }\n\n    case SORT_CARDS:\n      return {\n        ...state,\n        currentPage: 0,\n        filteredCards: sortCardsManager([...state.filteredCards], payload),\n        sortCriteria: payload,\n      }\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nfunction changeAppliedFiltersManager(appliedFilters, filter) {\n  appliedFilters.includes(filter) \n    ? appliedFilters.splice(appliedFilters.indexOf(filter), 1) \n    : appliedFilters.push(filter)\n  return appliedFilters;\n}\n\nfunction filterCardsManager(cards, appliedFilters) {\n  return cards.filter(card => {\n    return appliedFilters.every(filter => card.diets.includes(filter))\n  })\n};\n\nfunction sortCardsManager(array, sortCriteria) {\n  switch(sortCriteria) {\n    case 'az': return array.sort((x, y) => x.title.localeCompare(y.title));\n    case 'za': return array.sort((x, y) => y.title.localeCompare(x.title));\n    case 'score': return array.sort((x, y) => y.score - x.score);\n    default: return array;\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { GET_RECIPES, GET_DIETS, FILTER_RECIPES, SORT_RECIPES, SET_PAGE, SET_STATUS } from './actions.js';\nconst initialState = {\n  diets: [],\n  recipes: {\n    fetched: [],\n    displayed: []\n  },\n  displayParameters: {\n    status: 'initial',\n    page: 0,\n    filters: []\n  }\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case GET_DIETS:\n      return { ...state,\n        diets: payload\n      };\n\n    case GET_RECIPES:\n      return { ...state,\n        recipes: {\n          fetched: payload,\n          displayed: payload\n        },\n        displayParameters: {\n          status: 'displaying',\n          page: 0,\n          filters: []\n        }\n      };\n\n    case FILTER_RECIPES:\n      const [newFilters, filteredRecipes] = filterRecipes([...state.recipes.fetched], [...state.displayParameters.filters], payload);\n      return { ...state,\n        recipes: { ...state.recipes,\n          displayed: filteredRecipes\n        },\n        displayParameters: { ...state.displayParameters,\n          filters: newFilters,\n          page: 0\n        }\n      };\n\n    case SORT_RECIPES:\n      return { ...state,\n        recipes: { ...state.recipes,\n          displayed: sortRecipes([...state.recipes.displayed], payload)\n        },\n        displayParameters: { ...state.displayParameters,\n          page: 0\n        }\n      };\n\n    case SET_PAGE:\n      return { ...state,\n        displayParameters: { ...state.displayParameters,\n          page: payload\n        }\n      };\n\n    case SET_STATUS:\n      return { ...state,\n        displayParameters: { ...state.displayParameters,\n          status: payload\n        }\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}\n;\n\nfunction filterRecipes(recipes, filters, filter) {\n  filters.includes(filter) ? filters.splice(filters.indexOf(filter), 1) : filters.push(filter);\n  return [filters, recipes.filter(recipe => {\n    return filters.every(filter => recipe.diets.includes(filter));\n  })];\n}\n\nfunction sortRecipes(recipes, sortCriteria) {\n  switch (sortCriteria) {\n    case 'az':\n      return recipes.sort((x, y) => x.title.localeCompare(y.title));\n\n    case 'za':\n      return recipes.sort((x, y) => y.title.localeCompare(x.title));\n\n    case 'score':\n      return recipes.sort((x, y) => y.score - x.score);\n\n    default:\n      return recipes;\n  }\n}\n\n;","map":{"version":3,"sources":["/home/jralvarezwindey/Escritorio/henry-ip-food/client/src/redux/reducer.js"],"names":["GET_RECIPES","GET_DIETS","FILTER_RECIPES","SORT_RECIPES","SET_PAGE","SET_STATUS","initialState","diets","recipes","fetched","displayed","displayParameters","status","page","filters","reducer","state","type","payload","newFilters","filteredRecipes","filterRecipes","sortRecipes","filter","includes","splice","indexOf","push","recipe","every","sortCriteria","sort","x","y","title","localeCompare","score"],"mappings":"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","sourcesContent":["import { GET_RECIPES, GET_DIETS, FILTER_RECIPES, SORT_RECIPES, SET_PAGE, SET_STATUS } from './actions.js';\n\nconst initialState = {\n  diets: [],\n\n  recipes: {\n    fetched: [],\n    displayed: [],\n  },\n\n  displayParameters: {\n    status: 'initial',\n    page: 0,\n    filters: [],\n  },\n};\n\nexport default function reducer(state = initialState, { type, payload}) {\n  switch(type) {\n    case GET_DIETS:\n      return {\n        ...state,\n        diets: payload,\n      }\n\n    case GET_RECIPES: \n      return {\n        ...state,\n        recipes: {\n          fetched: payload,\n          displayed: payload\n        },\n        displayParameters: {\n          status: 'displaying',\n          page: 0, \n          filters: [],\n        },\n      };\n\n    case FILTER_RECIPES:\n      const [newFilters, filteredRecipes] = filterRecipes([...state.recipes.fetched], [...state.displayParameters.filters], payload);\n      return {\n        ...state,\n        recipes: {\n          ...state.recipes,\n          displayed: filteredRecipes \n        },\n        displayParameters: {\n          ...state.displayParameters,\n          filters: newFilters,\n          page: 0\n        }\n      }\n\n    case SORT_RECIPES:\n      return {\n        ...state,\n        recipes: {\n          ...state.recipes,\n          displayed: sortRecipes([...state.recipes.displayed], payload),\n        },\n        displayParameters: {\n          ...state.displayParameters,\n          page: 0,\n        }\n      }\n\n    case SET_PAGE: \n      return {\n        ...state,\n        displayParameters: {\n          ...state.displayParameters,\n          page: payload \n        }\n      }\n\n    case SET_STATUS:\n      return {\n        ...state,\n        displayParameters: {\n          ...state.displayParameters,\n          status: payload\n        }\n      }\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nfunction filterRecipes(recipes, filters, filter) {\n  filters.includes(filter) \n    ? filters.splice(filters.indexOf(filter), 1) \n    : filters.push(filter)\n  return [filters, recipes.filter(recipe => {\n    return filters.every(filter => recipe.diets.includes(filter))\n  })]\n}\n\nfunction sortRecipes(recipes, sortCriteria) {\n  switch(sortCriteria) {\n    case 'az': return recipes.sort((x, y) => x.title.localeCompare(y.title));\n    case 'za': return recipes.sort((x, y) => y.title.localeCompare(x.title));\n    case 'score': return recipes.sort((x, y) => y.score - x.score);\n    default: return recipes;\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}
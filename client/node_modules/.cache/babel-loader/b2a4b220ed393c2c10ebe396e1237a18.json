{"ast":null,"code":"var _jsxFileName = \"/home/jralvarezwindey/Escritorio/henry-ip-food/client/src/components/Paginator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { setPage } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Paginator() {\n  _s();\n\n  const [pages, setPages] = useState([]);\n  const {\n    cards,\n    currentPage\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let pages = [];\n    let i = 0;\n\n    while (cards.length > 0) {\n      cards = cards.slice(9);\n      pages.push(i++);\n    }\n\n    setPages(pages);\n  }, [cards]);\n\n  function handleClick(index) {\n    dispatch(setPage(index));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Div, {\n    children: pages.length > 1 && pages.map((page, index) => {\n      const selectedButtonStyle = index === currentPage ? {\n        backgroundColor: 'grey'\n      } : undefined;\n      return /*#__PURE__*/_jsxDEV(Button, {\n        style: selectedButtonStyle,\n        onClick: () => {\n          handleClick(index);\n        },\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Paginator, \"TeRx8IURSGqliLPn1VlhWNI/wic=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Paginator;\n;\nconst Div = styled.div`\n  position: absolute;\n  left: 0px;\n  top 200px;\n\n  font-size: 20px;\n  color: black;\n`;\n_c2 = Div;\nconst Button = styled.button`\n  position: relative;\n\n  margin: 10px;\n  padding: 5px;\n  background-color: deepPink;\n`;\n_c3 = Button;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Paginator\");\n$RefreshReg$(_c2, \"Div\");\n$RefreshReg$(_c3, \"Button\");","map":{"version":3,"sources":["/home/jralvarezwindey/Escritorio/henry-ip-food/client/src/components/Paginator.js"],"names":["React","useEffect","useState","useDispatch","useSelector","styled","setPage","Paginator","pages","setPages","cards","currentPage","state","dispatch","i","length","slice","push","handleClick","index","map","page","selectedButtonStyle","backgroundColor","undefined","Div","div","Button","button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEQ,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAyBP,WAAW,CAACQ,KAAK,IAAIA,KAAV,CAA1C;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,KAAK,GAAG,EAAZ;AACA,QAAIM,CAAC,GAAG,CAAR;;AACA,WAAOJ,KAAK,CAACK,MAAN,GAAe,CAAtB,EAAyB;AACvBL,MAAAA,KAAK,GAAGA,KAAK,CAACM,KAAN,CAAY,CAAZ,CAAR;AACAR,MAAAA,KAAK,CAACS,IAAN,CAAWH,CAAC,EAAZ;AACD;;AAEHL,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GATQ,EASN,CAACE,KAAD,CATM,CAAT;;AAYA,WAASQ,WAAT,CAAqBC,KAArB,EAA4B;AAC1BN,IAAAA,QAAQ,CAACP,OAAO,CAACa,KAAD,CAAR,CAAR;AACD;;AAED,sBACE,QAAC,GAAD;AAAA,cACIX,KAAK,CAACO,MAAN,GAAe,CAAf,IAAoBP,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAOF,KAAP,KAAiB;AAC/C,YAAMG,mBAAmB,GAAGH,KAAK,KAAKR,WAAV,GAAwB;AAACY,QAAAA,eAAe,EAAE;AAAlB,OAAxB,GAAoDC,SAAhF;AACA,0BACE,QAAC,MAAD;AAEE,QAAA,KAAK,EAAGF,mBAFV;AAGE,QAAA,OAAO,EAAG,MAAM;AAACJ,UAAAA,WAAW,CAACC,KAAD,CAAX;AAAmB,SAHtC;AAAA,kBAIIA,KAAK,GAAG;AAJZ,SACQA,KADR;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KAVqB;AADxB;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GApCuBZ,S;UAESH,W,EACdD,W;;;KAHKI,S;AAoCvB;AAED,MAAMkB,GAAG,GAAGpB,MAAM,CAACqB,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMD,G;AASN,MAAME,MAAM,GAAGtB,MAAM,CAACuB,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,M","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { setPage } from '../actions';\n\n\nexport default function Paginator() {\n  const [pages, setPages] = useState([]);\n  const { cards, currentPage } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n      let pages = [];\n      let i = 0;\n      while (cards.length > 0) {\n        cards = cards.slice(9);\n        pages.push(i++)\n      }\n\n    setPages(pages)\n  }, [cards])\n  \n\n  function handleClick(index) {\n    dispatch(setPage(index));\n  }\n\n  return (\n    <Div> \n      { pages.length > 1 && pages.map((page, index) => {\n        const selectedButtonStyle = index === currentPage ? {backgroundColor: 'grey'} : undefined;\n        return (\n          <Button \n            key={ index }\n            style={ selectedButtonStyle }\n            onClick={ () => {handleClick(index)} }>\n            { index + 1}\n          </Button>\n        );\n      }) }\n    </Div>\n  )\n};\n\nconst Div = styled.div`\n  position: absolute;\n  left: 0px;\n  top 200px;\n\n  font-size: 20px;\n  color: black;\n`\n\nconst Button = styled.button`\n  position: relative;\n\n  margin: 10px;\n  padding: 5px;\n  background-color: deepPink;\n`\n\n"]},"metadata":{},"sourceType":"module"}
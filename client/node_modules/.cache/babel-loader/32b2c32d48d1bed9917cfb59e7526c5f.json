{"ast":null,"code":"var _jsxFileName = \"/home/jralvarezwindey/Escritorio/food/client/src/components/CreateRecipe/CreateRecipeDumb.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as S from './CreateRecipe.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateRecipeDumb(_ref) {\n  _s();\n\n  let {\n    details,\n    errors,\n    handleSubmit,\n    handleChange,\n    handleAddInstruction,\n    handleRemoveInstruction,\n    handleSelectedDiets\n  } = _ref;\n  const {\n    diets\n  } = useSelector(state => state);\n  return /*#__PURE__*/_jsxDEV(S.CreateRecipe, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(S.Inputs, {\n      children: [/*#__PURE__*/_jsxDEV(S.Label, {\n        htmlFor: \"title\",\n        children: \"TITLE: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Input, {\n        maxLength: \"100\",\n        autoComplete: \"off\",\n        name: \"title\",\n        value: details.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.ErrorContainer, {\n        active: errors.title,\n        children: [/*#__PURE__*/_jsxDEV(S.ErrorSymbol, {\n          children: \"!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(S.ErrorMessage, {\n          children: \"Title is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 83\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Label, {\n        htmlFor: \"score\",\n        children: \"SCORE: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Input, {\n        name: \"score\",\n        autoComplete: \"off\",\n        value: details.score,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.ErrorContainer, {\n        active: errors.score,\n        children: [/*#__PURE__*/_jsxDEV(S.ErrorSymbol, {\n          children: \"!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(S.ErrorMessage, {\n          children: \"Score must be a number between 0 and 5.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 83\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Label, {\n        htmlFor: \"healthScore\",\n        children: \"HEALTH SCORE: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Input, {\n        name: \"healthScore\",\n        autoComplete: \"off\",\n        value: details.healthScore,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.ErrorContainer, {\n        active: errors.healthScore,\n        children: [/*#__PURE__*/_jsxDEV(S.ErrorSymbol, {\n          children: \"!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 57\n        }, this), /*#__PURE__*/_jsxDEV(S.ErrorMessage, {\n          children: \"Health score must be an integer between 0 and 100.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 89\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Label, {\n        htmlFor: \"summary\",\n        children: \"SUMMARY: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.TextArea, {\n        height: \"205px\",\n        name: \"summary\",\n        autoComplete: \"off\",\n        value: details.summary,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.ErrorContainer, {\n        active: errors.summary,\n        children: [/*#__PURE__*/_jsxDEV(S.ErrorSymbol, {\n          children: \"!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(S.ErrorMessage, {\n          children: \"Summary for the recipe is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 85\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Label, {\n        htmlFor: \"instruction\",\n        children: \"ADD INSTRUCTION: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.TextArea, {\n        height: \"120px\",\n        name: \"instruction\",\n        autoComplete: \"off\",\n        value: details.instruction,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.AddInstructionButton, {\n        inactive: /^\\s*$/.test(details.instruction),\n        type: \"button\",\n        onClick: handleAddInstruction,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Instructions, {\n        inactive: details.instructions.length > 0 ? false : true,\n        children: details.instructions.map((instruction, index) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [instruction, \" \", /*#__PURE__*/_jsxDEV(S.RemoveInstructionButton, {\n              type: \"button\",\n              onClick: () => handleRemoveInstruction(index),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 35\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.SubmitButton, {\n      disabled: errors.disableSubmit,\n      inactive: errors.disableSubmit,\n      children: /*#__PURE__*/_jsxDEV(S.SubmitButtonText, {\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateRecipeDumb, \"7LsZHFxWYBMwvFUQmsF0m7efG74=\", false, function () {\n  return [useSelector];\n});\n\n_c = CreateRecipeDumb;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRecipeDumb\");","map":{"version":3,"sources":["/home/jralvarezwindey/Escritorio/food/client/src/components/CreateRecipe/CreateRecipeDumb.js"],"names":["React","useSelector","S","CreateRecipeDumb","details","errors","handleSubmit","handleChange","handleAddInstruction","handleRemoveInstruction","handleSelectedDiets","diets","state","title","score","healthScore","summary","instruction","test","instructions","length","map","index","disableSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,KAAKC,CAAZ,MAAmB,uBAAnB;;AAEA,eAAe,SAASC,gBAAT,OAA+I;AAAA;;AAAA,MAArH;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA,YAAnB;AAAiCC,IAAAA,YAAjC;AAA+CC,IAAAA,oBAA/C;AAAqEC,IAAAA,uBAArE;AAA8FC,IAAAA;AAA9F,GAAqH;AAC5J,QAAM;AAAEC,IAAAA;AAAF,MAAYV,WAAW,CAACW,KAAK,IAAIA,KAAV,CAA7B;AAEA,sBACE,QAAC,CAAD,CAAG,YAAH;AAAgB,IAAA,QAAQ,EAAGN,YAA3B;AAAA,4BACE,QAAC,CAAD,CAAG,MAAH;AAAA,8BACE,QAAC,CAAD,CAAG,KAAH;AAAS,QAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,CAAD,CAAG,KAAH;AAAS,QAAA,SAAS,EAAC,KAAnB;AAAyB,QAAA,YAAY,EAAC,KAAtC;AAA4C,QAAA,IAAI,EAAC,OAAjD;AAAyD,QAAA,KAAK,EAAGF,OAAO,CAACS,KAAzE;AAAiF,QAAA,QAAQ,EAAGN;AAA5F;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,CAAD,CAAG,cAAH;AAAkB,QAAA,MAAM,EAAGF,MAAM,CAACQ,KAAlC;AAAA,gCAA0C,QAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1C,eAA0E,QAAC,CAAD,CAAG,YAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE,QAAC,CAAD,CAAG,KAAH;AAAS,QAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,CAAD,CAAG,KAAH;AAAS,QAAA,IAAI,EAAC,OAAd;AAAsB,QAAA,YAAY,EAAC,KAAnC;AAAyC,QAAA,KAAK,EAAGT,OAAO,CAACU,KAAzD;AAAiE,QAAA,QAAQ,EAAGP;AAA5E;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,CAAD,CAAG,cAAH;AAAkB,QAAA,MAAM,EAAGF,MAAM,CAACS,KAAlC;AAAA,gCAA0C,QAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1C,eAA0E,QAAC,CAAD,CAAG,YAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eASE,QAAC,CAAD,CAAG,KAAH;AAAS,QAAA,OAAO,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,CAAD,CAAG,KAAH;AAAS,QAAA,IAAI,EAAC,aAAd;AAA4B,QAAA,YAAY,EAAC,KAAzC;AAA+C,QAAA,KAAK,EAAGV,OAAO,CAACW,WAA/D;AAA6E,QAAA,QAAQ,EAAGR;AAAxF;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE,QAAC,CAAD,CAAG,cAAH;AAAkB,QAAA,MAAM,EAAGF,MAAM,CAACU,WAAlC;AAAA,gCAAgD,QAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhD,eAAgF,QAAC,CAAD,CAAG,YAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAaE,QAAC,CAAD,CAAG,KAAH;AAAS,QAAA,OAAO,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE,QAAC,CAAD,CAAG,QAAH;AAAY,QAAA,MAAM,EAAC,OAAnB;AAA2B,QAAA,IAAI,EAAC,SAAhC;AAA0C,QAAA,YAAY,EAAC,KAAvD;AAA6D,QAAA,KAAK,EAAGX,OAAO,CAACY,OAA7E;AAAuF,QAAA,QAAQ,EAAGT;AAAlG;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE,QAAC,CAAD,CAAG,cAAH;AAAkB,QAAA,MAAM,EAAGF,MAAM,CAACW,OAAlC;AAAA,gCAA4C,QAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5C,eAA4E,QAAC,CAAD,CAAG,YAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5E;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAiBE,QAAC,CAAD,CAAG,KAAH;AAAS,QAAA,OAAO,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eAkBE,QAAC,CAAD,CAAG,QAAH;AAAY,QAAA,MAAM,EAAC,OAAnB;AAA2B,QAAA,IAAI,EAAC,aAAhC;AAA8C,QAAA,YAAY,EAAC,KAA3D;AAAiE,QAAA,KAAK,EAAGZ,OAAO,CAACa,WAAjF;AAA+F,QAAA,QAAQ,EAAGV;AAA1G;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE,QAAC,CAAD,CAAG,oBAAH;AAAwB,QAAA,QAAQ,EAAG,QAAQW,IAAR,CAAad,OAAO,CAACa,WAArB,CAAnC;AAAuE,QAAA,IAAI,EAAC,QAA5E;AAAqF,QAAA,OAAO,EAAGT,oBAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF,eAqBE,QAAC,CAAD,CAAG,YAAH;AAAgB,QAAA,QAAQ,EAAGJ,OAAO,CAACe,YAAR,CAAqBC,MAArB,GAA8B,CAA9B,GAAkC,KAAlC,GAA0C,IAArE;AAAA,kBACIhB,OAAO,CAACe,YAAR,CAAqBE,GAArB,CAAyB,CAACJ,WAAD,EAAcK,KAAd,KAAwB;AAC/C,8BACE;AAAA,uBACIL,WADJ,oBACkB,QAAC,CAAD,CAAG,uBAAH;AAA2B,cAAA,IAAI,EAAC,QAAhC;AAAyC,cAAA,OAAO,EAAG,MAAMR,uBAAuB,CAACa,KAAD,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADlB;AAAA,aAASA,KAAT;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SAND;AADJ;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiCE,QAAC,CAAD,CAAG,YAAH;AAAgB,MAAA,QAAQ,EAAGjB,MAAM,CAACkB,aAAlC;AAAkD,MAAA,QAAQ,EAAGlB,MAAM,CAACkB,aAApE;AAAA,6BACE,QAAC,CAAD,CAAG,gBAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GA1CuBpB,gB;UACJF,W;;;KADIE,gB;AA0CvB","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as S from './CreateRecipe.styled'\n\nexport default function CreateRecipeDumb({ details, errors, handleSubmit, handleChange, handleAddInstruction, handleRemoveInstruction, handleSelectedDiets }) {\n  const { diets } = useSelector(state => state)\n\n  return (\n    <S.CreateRecipe onSubmit={ handleSubmit }> \n      <S.Inputs > \n        <S.Label htmlFor='title'>TITLE: </S.Label>\n        <S.Input maxLength='100' autoComplete='off' name='title' value={ details.title } onChange={ handleChange }/> \n        <S.ErrorContainer active={ errors.title }><S.ErrorSymbol>!</S.ErrorSymbol><S.ErrorMessage>Title is required.</S.ErrorMessage></S.ErrorContainer>\n\n        <S.Label htmlFor='score'>SCORE: </S.Label>\n        <S.Input name='score' autoComplete='off' value={ details.score } onChange={ handleChange }/> \n        <S.ErrorContainer active={ errors.score }><S.ErrorSymbol>!</S.ErrorSymbol><S.ErrorMessage>Score must be a number between 0 and 5.</S.ErrorMessage></S.ErrorContainer>\n\n        <S.Label htmlFor='healthScore'>HEALTH SCORE: </S.Label>\n        <S.Input name='healthScore' autoComplete='off' value={ details.healthScore } onChange={ handleChange }/> \n        <S.ErrorContainer active={ errors.healthScore }><S.ErrorSymbol>!</S.ErrorSymbol><S.ErrorMessage>Health score must be an integer between 0 and 100.</S.ErrorMessage></S.ErrorContainer>\n\n        <S.Label htmlFor='summary'>SUMMARY: </S.Label>\n        <S.TextArea height='205px' name='summary' autoComplete='off' value={ details.summary } onChange={ handleChange }></S.TextArea> \n        <S.ErrorContainer active={ errors.summary }><S.ErrorSymbol>!</S.ErrorSymbol><S.ErrorMessage>Summary for the recipe is required.</S.ErrorMessage></S.ErrorContainer>\n\n        <S.Label htmlFor='instruction'>ADD INSTRUCTION: </S.Label>\n        <S.TextArea height='120px' name=\"instruction\" autoComplete='off' value={ details.instruction } onChange={ handleChange }></S.TextArea>\n        <S.AddInstructionButton inactive={ /^\\s*$/.test(details.instruction) } type='button' onClick={ handleAddInstruction }>+</S.AddInstructionButton>\n        \n        <S.Instructions inactive={ details.instructions.length > 0 ? false : true }> \n          { details.instructions.map((instruction, index) => {\n              return (\n                <p key={ index }> \n                  { instruction } <S.RemoveInstructionButton type='button' onClick={ () => handleRemoveInstruction(index) }>-</S.RemoveInstructionButton>\n                </p>\n              )\n            }) }\n        </S.Instructions>\n      </S.Inputs>\n\n      <S.SubmitButton disabled={ errors.disableSubmit } inactive={ errors.disableSubmit }>\n        <S.SubmitButtonText>SUBMIT</S.SubmitButtonText>\n      </S.SubmitButton>\n    </S.CreateRecipe>\n  )\n};\n\n"]},"metadata":{},"sourceType":"module"}
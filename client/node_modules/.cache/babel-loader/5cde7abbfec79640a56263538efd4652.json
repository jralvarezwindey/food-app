{"ast":null,"code":"var _jsxFileName = \"/home/jralvarezwindey/Escritorio/henry-ip-food/client/src/components/DisplayParameters/DisplayParameters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterRecipes, changeFilters, sortRecipes } from '../../redux/actions.js';\nimport * as S from './DisplayParameters.styled.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DisplayParameters() {\n  _s();\n\n  const [selectedFilters, setSelectedFilters] = useState([]);\n  const {\n    diets\n  } = useSelector(state => state);\n  const {\n    displaying\n  } = useSelector(state => state.parameters);\n  const dispatch = useDispatch();\n\n  function handleClickFilterButton(filter) {\n    dispatch(changeFilters(filter));\n    dispatch(filterRecipes());\n  }\n\n  function handleClickOrderButton(sortCriteria) {\n    dispatch(sortRecipes(sortCriteria));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: displaying && /*#__PURE__*/_jsxDEV(S.ParametersContainer, {\n      children: [/*#__PURE__*/_jsxDEV(S.Dropdown, {\n        children: [/*#__PURE__*/_jsxDEV(S.DropdownButton, {\n          children: \"Order by\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(S.DropdownContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => handleClickOrderButton('az'),\n            children: \"(A-Z)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => handleClickOrderButton('za'),\n            children: \"(Z-A)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => handleClickOrderButton('score'),\n            children: \"score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), diets.map((diet, index) => {\n        const active = selectedFilters.includes(index);\n        return /*#__PURE__*/_jsxDEV(S.Diet, {\n          active: active,\n          onClick: () => handleClickFilterButton(diet),\n          children: diet\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }, this)\n  }, void 0, false);\n}\n\n_s(DisplayParameters, \"kj6pOIsIth5CCiIrMPWefjlMSqI=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = DisplayParameters;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayParameters\");","map":{"version":3,"sources":["/home/jralvarezwindey/Escritorio/henry-ip-food/client/src/components/DisplayParameters/DisplayParameters.js"],"names":["React","useState","useSelector","useDispatch","filterRecipes","changeFilters","sortRecipes","S","DisplayParameters","selectedFilters","setSelectedFilters","diets","state","displaying","parameters","dispatch","handleClickFilterButton","filter","handleClickOrderButton","sortCriteria","map","diet","index","active","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,WAAvC,QAA0D,wBAA1D;AACA,OAAO,KAAKC,CAAZ,MAAmB,+BAAnB;;;AAGA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAC1C,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAYT,WAAW,CAACU,KAAK,IAAIA,KAAV,CAA7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBX,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACE,UAAhB,CAAjC;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,WAASa,uBAAT,CAAiCC,MAAjC,EAAyC;AACvCF,IAAAA,QAAQ,CAACV,aAAa,CAACY,MAAD,CAAd,CAAR;AACAF,IAAAA,QAAQ,CAACX,aAAa,EAAd,CAAR;AACD;;AAED,WAASc,sBAAT,CAAgCC,YAAhC,EAA8C;AAC5CJ,IAAAA,QAAQ,CAACT,WAAW,CAACa,YAAD,CAAZ,CAAR;AACD;;AAGD,sBACE;AAAA,cAAIN,UAAU,iBAAI,QAAC,CAAD,CAAG,mBAAH;AAAA,8BAChB,QAAC,CAAD,CAAG,QAAH;AAAA,gCACE,QAAC,CAAD,CAAG,cAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,CAAD,CAAG,eAAH;AAAA,kCACE;AAAG,YAAA,OAAO,EAAE,MAAMK,sBAAsB,CAAC,IAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,OAAO,EAAE,MAAMA,sBAAsB,CAAC,IAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAG,YAAA,OAAO,EAAE,MAAMA,sBAAsB,CAAC,OAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADgB,EAUdP,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,cAAMC,MAAM,GAAGd,eAAe,CAACe,QAAhB,CAAyBF,KAAzB,CAAf;AACA,4BACE,QAAC,CAAD,CAAG,IAAH;AAAsB,UAAA,MAAM,EAAGC,MAA/B;AAAwC,UAAA,OAAO,EAAG,MAAMP,uBAAuB,CAACK,IAAD,CAA/E;AAAA,oBACIA;AADJ,WAAcC,KAAd;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OAPD,CAVc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlB,mBADF;AAsBD;;GAtCuBd,iB;UAEJN,W,EACIA,W,EACLC,W;;;KAJKK,iB;AAsCvB","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterRecipes, changeFilters, sortRecipes } from '../../redux/actions.js';\nimport * as S from './DisplayParameters.styled.js';\n\n\nexport default function DisplayParameters() {\n  const [selectedFilters, setSelectedFilters] = useState([])\n  const { diets } = useSelector(state => state)\n  const { displaying }= useSelector(state => state.parameters);\n  const dispatch = useDispatch();\n\n  function handleClickFilterButton(filter) {\n    dispatch(changeFilters(filter));\n    dispatch(filterRecipes());\n  }\n\n  function handleClickOrderButton(sortCriteria) {\n    dispatch(sortRecipes(sortCriteria));\n  }\n\n \n  return (\n    <>{ displaying && <S.ParametersContainer>\n      <S.Dropdown>\n        <S.DropdownButton>Order by</S.DropdownButton>\n        <S.DropdownContent>\n          <p onClick={() => handleClickOrderButton('az') }>(A-Z)</p>\n          <p onClick={() => handleClickOrderButton('za') }>(Z-A)</p>\n          <p onClick={() => handleClickOrderButton('score') }>score</p>\n        </S.DropdownContent>\n      </S.Dropdown>\n\n      { diets.map((diet, index) => {\n          const active = selectedFilters.includes(index)\n          return (\n            <S.Diet key={ index } active={ active } onClick={ () => handleClickFilterButton(diet) }>\n              { diet }\n            </S.Diet>\n          )\n        }\n      ) }\n    </S.ParametersContainer> }</>\n  )\n};\n      \n\n"]},"metadata":{},"sourceType":"module"}
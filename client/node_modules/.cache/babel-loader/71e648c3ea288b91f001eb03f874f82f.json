{"ast":null,"code":"import { GET_RECIPES, SORT_RECIPES } from '../actions';\nconst initialState = {\n  recipes: [],\n  sortCriteria: 'None'\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_RECIPES:\n      return { ...state,\n        recipes: action.payload\n      };\n\n    case SORT_RECIPES:\n      return { ...state,\n        sortCriteria: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}\n;\n\nfunction sortFunction(array, sortCriteria) {\n  let arrayCopy = [...array];\n  if (sortCriteria === 'none') return arrayCopy;\n  if (sortCriteria === 'az') return arrayCopy.sort((x, y) => x.localeCompare(y));\n  if (sortCriteria === 'za') return arrayCopy.sort((x, y) => y.localeCompare(x));\n  if (sortCriteria === 'score') return arrayCopy;\n} // arr.sort((a, b) => a.localeCompare(b))","map":{"version":3,"sources":["/home/jralvarezwindey/Escritorio/henry-ip-food/client/src/reducer/index.js"],"names":["GET_RECIPES","SORT_RECIPES","initialState","recipes","sortCriteria","reducer","state","action","type","payload","sortFunction","array","arrayCopy","sort","x","y","localeCompare"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,QAA0C,YAA1C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,YAAY,EAAE;AAFK,CAArB;AAKA,eAAe,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAC5D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKR,WAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAFX,OAAP;;AAIF,SAAKR,YAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,YAAY,EAAEG,MAAM,CAACE;AAFhB,OAAP;;AAIF;AACE,aAAO,EACL,GAAGH;AADE,OAAP;AAZJ;AAgBD;AAAA;;AAED,SAASI,YAAT,CAAsBC,KAAtB,EAA6BP,YAA7B,EAA2C;AACzC,MAAIQ,SAAS,GAAG,CAAC,GAAGD,KAAJ,CAAhB;AACA,MAAIP,YAAY,KAAK,MAArB,EAA6B,OAAOQ,SAAP;AAC7B,MAAIR,YAAY,KAAK,IAArB,EAA2B,OAAOQ,SAAS,CAACC,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,aAAF,CAAgBD,CAAhB,CAAzB,CAAP;AAC3B,MAAIX,YAAY,KAAK,IAArB,EAA2B,OAAOQ,SAAS,CAACC,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,aAAF,CAAgBF,CAAhB,CAAzB,CAAP;AAC3B,MAAIV,YAAY,KAAK,OAArB,EAA8B,OAAOQ,SAAP;AAC/B,C,CACD","sourcesContent":["import { GET_RECIPES, SORT_RECIPES } from '../actions';\n\nconst initialState = {\n  recipes: [],\n  sortCriteria: 'None',\n};\n\nexport default function reducer(state = initialState, action) {\n  switch(action.type) {\n    case GET_RECIPES: \n      return {\n        ...state,\n        recipes: action.payload,\n      };\n    case SORT_RECIPES:\n      return {\n        ...state,\n        sortCriteria: action.payload,\n      }\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nfunction sortFunction(array, sortCriteria) {\n  let arrayCopy = [...array]\n  if (sortCriteria === 'none') return arrayCopy;\n  if (sortCriteria === 'az') return arrayCopy.sort((x, y) => x.localeCompare(y));\n  if (sortCriteria === 'za') return arrayCopy.sort((x, y) => y.localeCompare(x));\n  if (sortCriteria === 'score') return arrayCopy;\n}\n// arr.sort((a, b) => a.localeCompare(b))\n"]},"metadata":{},"sourceType":"module"}